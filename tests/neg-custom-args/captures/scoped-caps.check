-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:7:20 -----------------------------------
7 |  val g: A^ -> B^ = f // error
  |                    ^
  |                    Found:    (f : (x: A^) -> B^²)
  |                    Required: A^ -> B^³
  |
  |                    where:    ^  refers to the universal root capability
  |                              ^² refers to a root capability associated with the result type of (x: A^): B^²
  |                              ^³ refers to a fresh root capability in the type of value g
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:9:25 -----------------------------------
9 |  val _: (x: A^) -> B^ = g // error
  |                         ^
  |                         Found:    (g : A^ -> B^²)
  |                         Required: (x: A^) -> B^³
  |
  |                         where:    ^  refers to the universal root capability
  |                                   ^² refers to a fresh root capability in the type of value g
  |                                   ^³ refers to a root capability associated with the result type of (x: A^): B^³
  |
  |
  |                         Note that the existential capture root in B^
  |                         cannot subsume the capability cap
  |
  | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:10:20 ----------------------------------
10 |  val _: A^ -> B^ = f // error
   |                    ^
   |                    Found:    (f : (x: A^) -> B^²)
   |                    Required: A^ -> B^³
   |
   |                    where:    ^  refers to the universal root capability
   |                              ^² refers to a root capability associated with the result type of (x: A^): B^²
   |                              ^³ refers to a fresh root capability in the type of value _$3
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:12:20 ----------------------------------
12 |  val _: A^ -> B^ = x => g(x)      // error, since g is pure, g(x): B^{x} , which does not match B^{fresh}
   |                    ^^^^^^^^^
   |                    Found:    (x: A^) ->? B^{x}
   |                    Required: (x: A^) -> B^²
   |
   |                    where:    ^  refers to the universal root capability
   |                              ^² refers to a fresh root capability in the type of value _$5
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:13:25 ----------------------------------
13 |  val _: (x: A^) -> B^ = x => f(x) // error: existential in B cannot subsume `x` since `x` is not shared
   |                         ^^^^^^^^^
   |                        Found:    (x: A^) ->? B^{x}
   |                        Required: (x: A^) -> B^²
   |
   |                        where:    ^  refers to the universal root capability
   |                                  ^² refers to a root capability associated with the result type of (x: A^): B^²
   |
   |
   |                        Note that the existential capture root in B^
   |                        cannot subsume the capability x.type since that capability is not a SharedCapability
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:16:24 ----------------------------------
16 |  val _: (x: S) -> B^ = h          // error: direct conversion fails
   |                        ^
   |                        Found:    (h : S -> B^)
   |                        Required: (x: S) -> B^²
   |
   |                        where:    ^  refers to a fresh root capability in the type of value h
   |                                  ^² refers to a root capability associated with the result type of (x: S): B^²
   |
   |
   |                        Note that the existential capture root in B^
   |                        cannot subsume the capability cap
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:22:19 ----------------------------------
22 |  val _: S -> B^ = j               // error
   |                   ^
   |                   Found:    (j : (x: S) -> B^)
   |                   Required: S -> B^²
   |
   |                   where:    ^  refers to a root capability associated with the result type of (x: S): B^
   |                             ^² refers to a fresh root capability in the type of value _$11
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:23:19 ----------------------------------
23 |  val _: S -> B^ = x => j(x)       // error
   |                   ^^^^^^^^^
   |                   Found:    (x: S) ->? B^{x}
   |                   Required: (x: S) -> B^
   |
   |                   where:    ^ refers to a fresh root capability in the type of value _$12
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:26:20 ----------------------------------
26 |  val _: A^ => B^ = x => g2(x)  // error: g2(x): B^{g2, x}, and the `x` cannot be subsumed by fresh
   |                    ^^^^^^^^^^
   |                    Found:    (x: A^) ->{g2} B^²
   |                    Required: (x: A^) => B^³
   |
   |                    where:    => refers to a fresh root capability in the type of value _$13
   |                              ^  refers to the universal root capability
   |                              ^² refers to a root capability associated with the result type of (x: A^): B^²
   |                              ^³ refers to a fresh root capability in the type of value _$13
   |
   | longer explanation available when compiling with `-explain`
-- [E007] Type Mismatch Error: tests/neg-custom-args/captures/scoped-caps.scala:28:24 ----------------------------------
28 |  val _: A^{io} => B^ = x => g3(x)  // error, fails level checking of fresh instances
   |                        ^^^^^^^^^^
   |                     Found:    (x: A^{io}) ->{g3} B^
   |                     Required: (x: A^{io}) => B^²
   |
   |                     where:    => refers to a fresh root capability in the type of value _$14
   |                               ^  refers to a root capability associated with the result type of (x: A^{io}): B^
   |                               ^² refers to a fresh root capability in the type of value _$14
   |
   | longer explanation available when compiling with `-explain`
